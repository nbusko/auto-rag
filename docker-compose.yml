
services:
  rag_service:
    build: ./rag_service
    container_name: rag_service
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - EMBEDDER_MODEL=${EMBEDDER_MODEL}
    ports:
      - "5050:5050"
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 5050 --log-level info 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  document_processor:
    build: ./document_processor
    container_name: document_processor
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - EMBEDDER_MODEL=${EMBEDDER_MODEL}
      - OCR_MODEL=${OCR_MODEL}
    ports:
      - "5030:5030"
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 5030 --log-level info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5030/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: pgvector/pgvector:pg16
    container_name: auto-rag-db-1
    restart: unless-stopped
    environment:
      POSTGRES_DB: ragdb
      POSTGRES_USER: raguser
      POSTGRES_PASSWORD: ragpass
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "15434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d ragdb"]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: auto-rag-minio-1
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_CONSOLE_ADDRESS: ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"

  web:
    build:
      context: ./Web
      dockerfile: Dockerfile
    container_name: auto-rag-web-1
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      document_processor:
        condition: service_started
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=ragdb;Username=raguser;Password=ragpass
      Minio__Endpoint: http://minio:9000
      Minio__AccessKey: minio
      Minio__SecretKey: minio123
      Minio__Bucket: autorag
      ExternalApis__RagService: http://rag_service:5050
    ports:
      - "8080:8080"

volumes:
  pgdata:
  minio-data: