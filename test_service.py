#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã RAG —Å–µ—Ä–≤–∏—Å–∞
"""

import requests
import time
import sys
import uuid

def test_health_check():
    """–¢–µ—Å—Ç health check —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check...")
    try:
        response = requests.get("http://localhost:5050/api/v1/health", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Health check —É—Å–ø–µ—à–µ–Ω")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
            return True
        else:
            print(f"‚ùå Health check –Ω–µ—É—Å–ø–µ—à–µ–Ω: {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_root_endpoint():
    """–¢–µ—Å—Ç –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞...")
    try:
        response = requests.get("http://localhost:5050/api/v1/", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
            return True
        else:
            print(f"‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_rag_process():
    """–¢–µ—Å—Ç RAG process —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RAG process...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "chat_id": str(uuid.uuid4()),
        "user_message": "–ß—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç?",
        "document_id": str(uuid.uuid4()),
        "embeddings": [[0.5] * 312],  # –¢–µ—Å—Ç–æ–≤—ã–π —ç–º–±–µ–¥–¥–∏–Ω–≥ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ 312
        "text_chunks": ["–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —ç—Ç–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –Ω–∞ —Å—Ç–µ—Ä–æ–∏–¥–∞—Ö" * 312],
        "top_k": 5,
        "temperature": 0.7,
        "threshold": 0.0
    }
    
    try:
        response = requests.post(
            "http://localhost:5050/api/v1/rag/process",
            json=test_data,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ RAG process —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   –°—Ç–∞—Ç—É—Å: {result.get('status')}")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {result.get('message')}")
            if result.get('generated_answer'):
                print(f"   –û—Ç–≤–µ—Ç: {result.get('generated_answer')[:100]}...")
            return True
        else:
            print(f"‚ùå RAG process –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_swagger_ui():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Swagger UI"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Swagger UI...")
    try:
        response = requests.get("http://localhost:5050/docs", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Swagger UI –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå Swagger UI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ RAG —Å–µ—Ä–≤–∏—Å–∞...")
    print("=" * 50)
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...")
    time.sleep(5)
    
    tests = [
        test_health_check,
        test_root_endpoint,
        test_swagger_ui,
        test_rag_process
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
        time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return 0
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞.")
        return 1

if __name__ == "__main__":
    sys.exit(main()) 